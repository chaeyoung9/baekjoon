import java.io.*;
import java.util.*;

public class q2493_tower {
	public static void main(String args[]) throws Exception{
		BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
		int N = Integer.parseInt(br.readLine());
		Stack<point> st = new Stack<point>();
		Deque<Integer> st2 = new ArrayDeque<Integer>();
		
		String readin = br.readLine();
		StringTokenizer tok = new StringTokenizer(readin);
		
		
		for (int i = 0 ; i < N ; i++) {
			int temp1 = Integer.valueOf(tok.nextToken());
			if (st.isEmpty()) {
				st2.push(0);
			} else {
				while (!st.isEmpty()) {
					int ord = st.peek().order;
					int val = st.peek().value;
					if (val > temp1) {
						st.pop();
						st2.push(ord+1);
						st.push(new point(ord, val));
						break;
					} else if (val <= temp1) {
						st.pop();
						if (st.isEmpty()) {
							st2.push(0);
						}
					}
				}
			}
			st.push(new point(i, temp1));
		}
	
		StringBuilder sb = new StringBuilder();
		while (!st2.isEmpty()) {
			sb.append(st2.pollLast()).append(" ");
		}
		System.out.println(sb.toString().trim());
	
	}
	
	static class point{
		int order;
		int value;
		public point(int order, int value) {
			this.order = order;
			this.value = value;
		}
	}
}
